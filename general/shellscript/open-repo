#!/usr/bin/env bash
# vim: noet ci pi sts=0 sw=2 ts=2:

# Suggested usage is with dmenu/wofi/dmenu etc Easiest way to do this is to add an appropriate
# desktop file. Something like this perhaps:
# [Desktop Entry]
# Type=Application
# Name=Open Repository...
# Exec=open-repo -wi
# Terminal=false

# Default picker, editor and root directory
picker="fzf"
editor="idea"
root_directory="$HOME/code"

function print_help {
	cat <<- HELP
	Available picker options:
	 -w        Use 'wofi --dmenu'
	 -f        Use 'fzf' (default)
	 -p 'cmd'  Use a custom command

	 Available editor options:
	 -i        Use 'idea' (default)
	 -c        Use 'code'
	 -t        Use 'echo' (for testing)
	 -e 'cmd'  Use a custom command

	Other options:
	-r '/path' Change the root used when looking for repos (default: "\$HOME/code")
	-h         Print this help, then exit
	HELP
}

while getopts ":wfp:icte:hr:" opt; do
	case "${opt}" in
		# Picker options
		w)	picker="wofi --dmenu" ;;
		f)	picker="fzf" ;;
		p)	picker="$OPTARG" ;;

		# Editor options
		i)	editor="idea" ;;
		c)	editor="code" ;;
		t)	editor="echo" ;;
		e)	editor="$OPTARG" ;;

		# Other options
		h)	print_help && exit 0 ;;
		r)	root_directory=${OPTARG} ;;
	esac
done

function list-repos {
	find "$root_directory" \
		-maxdepth 3 \
		-type d \
		-name '.git' \
		-not -wholename '*/\.unison*' -prune \
		-not -wholename '*/_*' -prune \
		-not -wholename '*/old-*' -prune \
	| sed -e 's#/.git$##g' -e "s#$root_directory/##g"
}

# Verify that the chosen directory is a real directory
if [ ! -d "$root_directory" ]; then
	echo "Root directory '$root_directory' is not a directory..."
	exit 1
fi

# If something was picked, open it in the editor, otherwise exit with an error
picked_path="$(list-repos | $picker || exit 1)"
[ -z "$picked_path" ] \
	&& exit 1 \
	|| $editor "$root_directory/$picked_path"
